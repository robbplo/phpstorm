<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="$USER_HOME$/Projects/pwh-pwa/pages/products/_category/_subcategory/_slug/_id/index.vue" timestamp="1568104625092">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="297" column="0" />
        <mark key="]" line="297" column="0" />
        <mark key="." line="297" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-pwa/components/sdv-shop/i18n-selector/index.vue" timestamp="1568105967894">
        <mark key="[" line="36" column="0" />
        <mark key="]" line="36" column="0" />
        <mark key="." line="36" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-api/storage/logs/laravel-2019-09-10.log" timestamp="1568125884866">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-api/domain/Carts/Http/Resources/Cart.php" timestamp="1568102957931">
        <mark key="[" line="22" column="0" />
        <mark key="]" line="23" column="44" />
        <mark key="." line="18" column="67" />
        <mark key="^" line="18" column="67" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-pwa/pages/checkout/payment.vue" timestamp="1567501480098">
        <mark key="[" line="26" column="8" />
        <mark key="]" line="40" column="14" />
        <mark key="." line="25" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/vesca/resources/views/frontend/_partials/copyright.blade.php" timestamp="1567772940399">
        <mark key="[" line="9" column="51" />
        <mark key="]" line="9" column="51" />
        <mark key="." line="9" column="51" />
        <mark key="^" line="10" column="28" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/scratches/scratch.tpl" timestamp="1567772375845">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-api/database/migrations/2019_07_10_123949_create_attribute_sets_table.php" timestamp="1568029949109" />
      <file name="$USER_HOME$/Projects/pwh-api/storage/logs/laravel-2019-09-09.log" timestamp="1568032849795">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/facade/app/Services/Filemaker/Mappers/PriceMapper.php" timestamp="1568190209267">
        <mark key="[" line="28" column="13" />
        <mark key="]" line="28" column="15" />
        <mark key="." line="28" column="15" />
        <mark key="^" line="28" column="15" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-api/domain/Products/Http/Handlers/StockSync.php" timestamp="1568116270551">
        <mark key="[" line="33" column="40" />
        <mark key="]" line="33" column="39" />
        <mark key="." line="33" column="39" />
        <mark key="^" line="33" column="39" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-api/domain/Stores/Models/Store.php" timestamp="1568116329651">
        <mark key="[" line="7" column="0" />
        <mark key="]" line="7" column="0" />
        <mark key="." line="7" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-api/domain/Addresses/Models/Address.php" timestamp="1567672033878">
        <mark key="[" line="19" column="0" />
        <mark key="]" line="19" column="0" />
        <mark key="." line="19" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/facade/app/Services/Filemaker/Mappers/ProductMapper.php" timestamp="1568190674460" />
      <file name="$USER_HOME$/Projects/facade/app/Services/Filemaker/Middleware/CreateSession.php" timestamp="1567602016165">
        <mark key="[" line="22" column="0" />
        <mark key="]" line="22" column="0" />
        <mark key="." line="22" column="0" />
      </file>
      <file name="/Product.php" timestamp="1567756901848" />
      <file name="$USER_HOME$/Projects/pwh-pwa/pages/products.vue" timestamp="1568105247014">
        <mark key="'" line="50" column="12" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-api/domain/Attributes/Models/Attribute.php" timestamp="1568115110452">
        <mark key="[" line="39" column="0" />
        <mark key="]" line="39" column="0" />
        <mark key="." line="39" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/vesca/resources/views/frontend/benefits.blade.php" timestamp="1567774648957">
        <mark key="[" line="98" column="38" />
        <mark key="]" line="99" column="19" />
        <mark key="." line="99" column="19" />
        <mark key="^" line="99" column="19" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-pwa/pages/products/_category.vue" timestamp="1567681505414">
        <mark key="[" line="2" column="0" />
        <mark key="]" line="2" column="0" />
        <mark key="." line="2" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-pwa/store/modules/products.js" timestamp="1568193712788">
        <mark key="[" line="46" column="27" />
        <mark key="]" line="48" column="0" />
        <mark key="." line="48" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-api/domain/Products/Http/Handlers/PriceSync.php" timestamp="1568191314909">
        <mark key="[" line="6" column="0" />
        <mark key="]" line="6" column="0" />
        <mark key="^" line="46" column="34" />
        <mark key="." line="6" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-pwa/pages/products/index.vue" timestamp="1567685744923">
        <mark key="[" line="9" column="0" />
        <mark key="]" line="9" column="0" />
        <mark key="." line="9" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/vesca/resources/views/frontend/about.blade.php" timestamp="1567778864650" />
      <file name="$USER_HOME$/Projects/pwh-api/composer.lock" timestamp="1568115609423" />
      <file name="$USER_HOME$/Projects/pwh-pwa/store/modules/cart.js" timestamp="1568104597726">
        <mark key="'" line="100" column="5" />
        <mark key="[" line="53" column="0" />
        <mark key="]" line="53" column="0" />
        <mark key="." line="53" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-api/database/seeds/MessageTableSeeder.php" timestamp="1568192271836">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="61" column="0" />
        <mark key="]" line="61" column="0" />
        <mark key="." line="61" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-pwa/pages/checkout.vue" timestamp="1568104523350">
        <mark key="[" line="77" column="0" />
        <mark key="]" line="77" column="0" />
        <mark key="." line="77" column="0" />
        <mark key="^" line="80" column="94" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-api/routes/api.php" timestamp="1568100523836">
        <mark key="'" line="77" column="36" />
        <mark key="[" line="79" column="0" />
        <mark key="]" line="79" column="0" />
        <mark key="^" line="78" column="37" />
        <mark key="." line="79" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-pwa/store/modules/categories.js" timestamp="1568105750740">
        <mark key="[" line="43" column="32" />
        <mark key="]" line="43" column="32" />
        <mark key="." line="43" column="32" />
        <mark key="^" line="43" column="10" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-pwa/components/sdv-shop/block/productList.vue" timestamp="1568192275086">
        <mark key="[" line="74" column="41" />
        <mark key="]" line="74" column="41" />
        <mark key="^" line="74" column="41" />
        <mark key="." line="74" column="41" />
      </file>
      <file name="$USER_HOME$/Projects/vesca/resources/js/components/tabs/components/property/dimensions/HouseDimensions.vue" timestamp="1567756269064" />
      <file name="$USER_HOME$/Projects/pwh-api/domain/Carts/Http/Requests/RemoveFromCartRequest.php" timestamp="1568115961885">
        <mark key="[" line="27" column="56" />
        <mark key="]" line="28" column="0" />
        <mark key="." line="28" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-pwa/components/layout/footerCopyright.vue" timestamp="1568105833955">
        <mark key="[" line="12" column="0" />
        <mark key="]" line="12" column="0" />
        <mark key="." line="12" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-pwa/pages/checkout/billing.vue" timestamp="1568016727867">
        <mark key="'" line="10" column="39" />
        <mark key="[" line="8" column="0" />
        <mark key="]" line="8" column="0" />
        <mark key="^" line="9" column="24" />
        <mark key="." line="8" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-api/storage/logs/laravel-2019-09-11.log" timestamp="1568193211498">
        <mark key="'" line="10" column="66" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-api/domain/Carts/Http/Requests/AddToCartRequest.php" timestamp="1568115950164">
        <mark key="[" line="30" column="57" />
        <mark key="]" line="30" column="56" />
        <mark key="." line="30" column="56" />
        <mark key="^" line="30" column="56" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-api/domain/Products/Models/ProductStock.php" timestamp="1568116284897">
        <mark key="[" line="16" column="0" />
        <mark key="]" line="16" column="0" />
        <mark key="." line="16" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-api/domain/Carts/Models/Cart.php" timestamp="1568191518931">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="5" column="0" />
        <mark key="]" line="5" column="0" />
        <mark key="." line="5" column="0" />
        <mark key="^" line="29" column="45" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-api/app/Exceptions/Handler.php" timestamp="1568126075303">
        <mark key="[" line="51" column="0" />
        <mark key="]" line="51" column="52" />
        <mark key="." line="51" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-api/app/Providers/AppServiceProvider.php" timestamp="1568115645988">
        <mark key="[" line="44" column="0" />
        <mark key="]" line="44" column="0" />
        <mark key="." line="44" column="0" />
        <mark key="^" line="45" column="64" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-api/domain/Orders/Http/Requests/CreateOrderRequest.php" timestamp="1568116123657">
        <mark key="[" line="43" column="0" />
        <mark key="]" line="43" column="0" />
        <mark key="^" line="42" column="78" />
        <mark key="." line="43" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-api/app/Providers/RouteServiceProvider.php" timestamp="1568115659911">
        <mark key="[" line="49" column="13" />
        <mark key="]" line="55" column="0" />
        <mark key="." line="55" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-pwa/pages/products/_category/index.vue" timestamp="1568105462310">
        <mark key="[" line="13" column="65" />
        <mark key="]" line="13" column="65" />
        <mark key="." line="13" column="65" />
        <mark key="^" line="18" column="46" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-api/domain/Orders/Models/OrderLine.php" timestamp="1568191271235">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="41" column="77" />
        <mark key="]" line="41" column="85" />
        <mark key="^" line="41" column="85" />
        <mark key="." line="41" column="85" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-pwa/plugins/axios.js" timestamp="1568017781184" />
      <file name="$USER_HOME$/Projects/pwh-api/domain/Orders/Listeners/SendOrderToFacadeListener.php" timestamp="1568116240271">
        <mark key="[" line="57" column="0" />
        <mark key="]" line="57" column="0" />
        <mark key="." line="57" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-pwa/components/sdv-shop/block/categorySlider.vue" timestamp="1568105533208">
        <mark key="[" line="2" column="61" />
        <mark key="]" line="2" column="61" />
        <mark key="." line="2" column="61" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-api/domain/Products/Models/Product.php" timestamp="1568126205470">
        <mark key="'" line="83" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/vesca/resources/views/frontend/_partials/footer.blade.php" timestamp="1567773040284">
        <mark key="[" line="10" column="304" />
        <mark key="]" line="49" column="0" />
        <mark key="." line="49" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-api/domain/Orders/Listeners/ProcessOrderListener.php" timestamp="1568191733001">
        <mark key="[" line="60" column="19" />
        <mark key="]" line="61" column="11" />
        <mark key="." line="61" column="11" />
        <mark key="^" line="61" column="11" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-api/domain/Products/Http/Controllers/ProductCategoryController.php" timestamp="1567600718768">
        <mark key="[" line="17" column="0" />
        <mark key="]" line="17" column="0" />
        <mark key="." line="17" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-api/infrastructure/Traits/HasPrice.php" timestamp="1568108159480">
        <mark key="[" line="6" column="6" />
        <mark key="]" line="6" column="6" />
        <mark key="." line="6" column="6" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-api/storage/logs/laravel.log" timestamp="1568125939063">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/facade/storage/logs/laravel-2019-09-05.log" timestamp="1567668397810">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-api/domain/Carts/Http/Controllers/CartController.php" timestamp="1568100540427">
        <mark key="[" line="34" column="28" />
        <mark key="]" line="34" column="26" />
        <mark key="." line="34" column="26" />
        <mark key="^" line="34" column="26" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-api/app/Http/Middleware/TenantMiddleware.php" timestamp="1567502536896">
        <mark key="[" line="27" column="54" />
        <mark key="]" line="27" column="55" />
        <mark key="." line="27" column="55" />
      </file>
      <file name="/ProductMapper.php" timestamp="1568190608033" />
      <file name="$USER_HOME$/Projects/vesca/app/Http/Controllers/PageController.php" timestamp="1567773834062">
        <mark key="[" line="15" column="33" />
        <mark key="]" line="15" column="33" />
        <mark key="." line="15" column="33" />
        <mark key="^" line="16" column="34" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-pwa/helpers/products.js" timestamp="1568105621209">
        <mark key="'" line="54" column="26" />
        <mark key="[" line="24" column="0" />
        <mark key="]" line="24" column="0" />
        <mark key="." line="24" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-pwa/.env" timestamp="1568014935367">
        <mark key="[" line="2" column="16" />
        <mark key="]" line="2" column="22" />
        <mark key="^" line="2" column="22" />
        <mark key="." line="2" column="22" />
      </file>
      <file name="$USER_HOME$/Projects/pwh-pwa/components/sdv-shop/sdv-cart/sidebar.vue" timestamp="1568104713222">
        <mark key="'" line="133" column="0" />
        <mark key="[" line="42" column="92" />
        <mark key="]" line="42" column="78" />
        <mark key="^" line="42" column="78" />
        <mark key="." line="42" column="78" />
      </file>
    </filemarks>
    <jumps>
      <jump line="59" column="57" filename="$USER_HOME$/Projects/facade/app/Http/Controllers/Gateway/OrderController.php" />
      <jump line="63" column="57" filename="$USER_HOME$/Projects/facade/app/Http/Controllers/Gateway/OrderController.php" />
      <jump line="64" column="57" filename="$USER_HOME$/Projects/facade/app/Http/Controllers/Gateway/OrderController.php" />
      <jump line="65" column="66" filename="$USER_HOME$/Projects/facade/app/Http/Controllers/Gateway/OrderController.php" />
      <jump line="66" column="57" filename="$USER_HOME$/Projects/facade/app/Http/Controllers/Gateway/OrderController.php" />
      <jump line="67" column="66" filename="$USER_HOME$/Projects/facade/app/Http/Controllers/Gateway/OrderController.php" />
      <jump line="68" column="66" filename="$USER_HOME$/Projects/facade/app/Http/Controllers/Gateway/OrderController.php" />
      <jump line="69" column="0" filename="$USER_HOME$/Projects/facade/app/Http/Controllers/Gateway/OrderController.php" />
      <jump line="0" column="0" filename="$USER_HOME$/Projects/facade/app/Jobs/SendOrderToFilemaker.php" />
      <jump line="0" column="0" filename="$USER_HOME$/Projects/facade/storage/logs/laravel-2019-09-04.log" />
      <jump line="120" column="15" filename="$USER_HOME$/Projects/facade/storage/logs/laravel-2019-09-05.log" />
      <jump line="81" column="46" filename="$USER_HOME$/Projects/facade/app/Http/Controllers/Gateway/OrderController.php" />
      <jump line="409" column="55" filename="$USER_HOME$/Projects/pwh-pwa/components/sdv-shop/sdv-addressPicker/index.vue" />
      <jump line="265" column="40" filename="$USER_HOME$/Projects/pwh-pwa/components/sdv-shop/sdv-addressPicker/index.vue" />
      <jump line="269" column="38" filename="$USER_HOME$/Projects/pwh-pwa/components/sdv-shop/sdv-addressPicker/index.vue" />
      <jump line="8" column="0" filename="$USER_HOME$/Projects/pwh-pwa/components/sdv-shop/sdv-addressPicker/index.vue" />
      <jump line="326" column="19" filename="$USER_HOME$/Projects/pwh-pwa/components/sdv-shop/sdv-addressPicker/index.vue" />
      <jump line="438" column="0" filename="$USER_HOME$/Projects/pwh-pwa/components/sdv-shop/sdv-addressPicker/index.vue" />
      <jump line="0" column="0" filename="$USER_HOME$/Projects/pwh-pwa/components/sdv-shop/sdv-addressPicker/index.vue" />
      <jump line="195" column="0" filename="$USER_HOME$/Projects/pwh-pwa/components/sdv-shop/sdv-addressPicker/index.vue" />
      <jump line="197" column="29" filename="$USER_HOME$/Projects/pwh-pwa/components/sdv-shop/sdv-addressPicker/index.vue" />
      <jump line="450" column="0" filename="$USER_HOME$/Projects/pwh-pwa/components/sdv-shop/sdv-addressPicker/index.vue" />
      <jump line="77" column="4" filename="$USER_HOME$/Projects/pwh-pwa/pages/checkout/confirm.vue" />
      <jump line="13" column="47" filename="$USER_HOME$/Projects/pwh-pwa/pages/checkout/confirm.vue" />
      <jump line="15" column="47" filename="$USER_HOME$/Projects/pwh-pwa/pages/checkout/confirm.vue" />
      <jump line="16" column="53" filename="$USER_HOME$/Projects/pwh-pwa/pages/checkout/confirm.vue" />
      <jump line="22" column="47" filename="$USER_HOME$/Projects/pwh-pwa/pages/checkout/confirm.vue" />
      <jump line="24" column="47" filename="$USER_HOME$/Projects/pwh-pwa/pages/checkout/confirm.vue" />
      <jump line="25" column="53" filename="$USER_HOME$/Projects/pwh-pwa/pages/checkout/confirm.vue" />
      <jump line="29" column="36" filename="$USER_HOME$/Projects/pwh-pwa/pages/checkout/confirm.vue" />
      <jump line="31" column="47" filename="$USER_HOME$/Projects/pwh-pwa/pages/checkout/confirm.vue" />
      <jump line="11" column="12" filename="$USER_HOME$/Projects/pwh-pwa/pages/checkout/confirm.vue" />
      <jump line="29" column="0" filename="$USER_HOME$/Projects/pwh-api/domain/Addresses/Models/Address.php" />
      <jump line="25" column="20" filename="$USER_HOME$/Projects/pwh-api/domain/Addresses/Models/Address.php" />
      <jump line="12" column="6" filename="$USER_HOME$/Projects/pwh-api/domain/Orders/Models/Order.php" />
      <jump line="72" column="0" filename="$USER_HOME$/Projects/pwh-pwa/pages/checkout/confirm.vue" />
      <jump line="50" column="32" filename="$USER_HOME$/Projects/pwh-api/domain/Orders/Listeners/SendOrderToFacadeListener.php" />
      <jump line="48" column="22" filename="$USER_HOME$/Projects/pwh-api/domain/Orders/Listeners/SendOrderToFacadeListener.php" />
      <jump line="37" column="27" filename="$USER_HOME$/Projects/facade/app/Http/Controllers/Gateway/OrderController.php" />
      <jump line="89" column="0" filename="$USER_HOME$/Projects/facade/app/Http/Controllers/Gateway/OrderController.php" />
      <jump line="61" column="85" filename="$USER_HOME$/Projects/pwh-api/domain/Orders/Listeners/ProcessOrderListener.php" />
      <jump line="55" column="55" filename="$USER_HOME$/Projects/facade/app/Http/Controllers/Gateway/OrderController.php" />
      <jump line="77" column="55" filename="$USER_HOME$/Projects/facade/app/Http/Controllers/Gateway/OrderController.php" />
      <jump line="46" column="0" filename="$USER_HOME$/Projects/facade/app/Jobs/SendOrderToFilemaker.php" />
      <jump line="188" column="56" filename="$USER_HOME$/Projects/pwh-api/database/seeds/MessageTableSeeder.php" />
      <jump line="206" column="0" filename="$USER_HOME$/Projects/pwh-api/database/seeds/MessageTableSeeder.php" />
      <jump line="17" column="25" filename="$USER_HOME$/Projects/facade/.env" />
      <jump line="1" column="0" filename="$USER_HOME$/Projects/facade/app/Console/Commands/FireWebhookCommand.php" />
      <jump line="51" column="1" filename="$USER_HOME$/Projects/facade/.env" />
      <jump line="48" column="17" filename="$USER_HOME$/Projects/facade/.env" />
      <jump line="13" column="34" filename="$USER_HOME$/Projects/pwh-pwa/pages/product/_id/_slug.vue" />
      <jump line="18" column="51" filename="$USER_HOME$/Projects/pwh-api/storage/logs/laravel-2019-09-05.log" />
      <jump line="0" column="0" filename="$USER_HOME$/Projects/pwh-api/storage/logs/laravel-2019-09-05.log" />
      <jump line="69" column="37" filename="$USER_HOME$/Projects/vesca/resources/views/layouts/site.blade.php" />
      <jump line="31" column="9" filename="$USER_HOME$/Projects/pwh-api/database/seeds/MessageTableSeeder.php" />
      <jump line="202" column="78" filename="$USER_HOME$/Projects/pwh-api/database/seeds/MessageTableSeeder.php" />
      <jump line="114" column="41" filename="$USER_HOME$/Projects/pwh-api/database/seeds/MessageTableSeeder.php" />
      <jump line="14" column="39" filename="$USER_HOME$/Projects/pwh-pwa/pages/checkout/billing.vue" />
      <jump line="153" column="24" filename="$USER_HOME$/Projects/pwh-pwa/pages/checkout/confirm.vue" />
      <jump line="267" column="90" filename="$USER_HOME$/Projects/pwh-api/storage/logs/laravel-2019-09-09.log" />
      <jump line="325" column="0" filename="$USER_HOME$/Projects/pwh-api/storage/logs/laravel-2019-09-09.log" />
      <jump line="123" column="0" filename="$USER_HOME$/Projects/pwh-api/storage/logs/laravel-2019-09-09.log" />
      <jump line="60" column="0" filename="$USER_HOME$/Projects/pwh-api/domain/Orders/Models/Order.php" />
      <jump line="62" column="85" filename="$USER_HOME$/Projects/pwh-api/domain/Orders/Models/Order.php" />
      <jump line="63" column="20" filename="$USER_HOME$/Projects/pwh-api/domain/Orders/Models/Order.php" />
      <jump line="458" column="71" filename="$USER_HOME$/Projects/pwh-api/storage/logs/laravel-2019-09-09.log" />
      <jump line="1422" column="2" filename="$USER_HOME$/Projects/pwh-api/storage/logs/laravel-2019-09-09.log" />
      <jump line="66" column="12" filename="$USER_HOME$/Projects/pwh-api/domain/Orders/Models/Order.php" />
      <jump line="1" column="0" filename="$USER_HOME$/Projects/pwh-api/storage/logs/laravel-2019-09-09.log" />
      <jump line="148" column="0" filename="$USER_HOME$/Projects/pwh-api/domain/Products/Models/Product.php" />
      <jump line="430" column="16" filename="$USER_HOME$/Projects/pwh-api/storage/logs/laravel-2019-09-09.log" />
      <jump line="6975" column="21" filename="$USER_HOME$/Projects/pwh-api/storage/logs/laravel-2019-09-09.log" />
      <jump line="6994" column="6" filename="$USER_HOME$/Projects/pwh-api/storage/logs/laravel-2019-09-09.log" />
      <jump line="44" column="13" filename="$USER_HOME$/Projects/pwh-api/storage/logs/laravel-2019-09-09.log" />
      <jump line="0" column="0" filename="$USER_HOME$/Projects/pwh-api/storage/logs/laravel-2019-09-09.log" />
      <jump line="202" column="0" filename="$USER_HOME$/Projects/pwh-pwa/components/sdv-shop/sdv-cart/sidebar.vue" />
      <jump line="223" column="6" filename="$USER_HOME$/Projects/pwh-pwa/pages/product/_id/_slug.vue" />
      <jump line="299" column="0" filename="$USER_HOME$/Projects/pwh-pwa/pages/products/_category/_subcategory/_slug/_id/index.vue" />
      <jump line="118" column="0" filename="$USER_HOME$/Projects/pwh-pwa/store/modules/cart.js" />
      <jump line="43" column="0" filename="$USER_HOME$/Projects/pwh-api/routes/api.php" />
      <jump line="0" column="0" filename="$USER_HOME$/Projects/pwh-api/domain/Carts/Models/Cart.php" />
      <jump line="77" column="36" filename="$USER_HOME$/Projects/pwh-api/routes/api.php" />
      <jump line="115" column="5" filename="$USER_HOME$/Projects/pwh-pwa/store/modules/cart.js" />
      <jump line="146" column="19" filename="$USER_HOME$/Projects/pwh-api/domain/Products/Models/Product.php" />
      <jump line="0" column="0" filename="$USER_HOME$/Projects/pwh-api/domain/Products/Models/Product.php" />
      <jump line="297" column="11" filename="$USER_HOME$/Projects/pwh-pwa/pages/products/_category/_subcategory/_slug/_id/index.vue" />
      <jump line="0" column="0" filename="$USER_HOME$/Projects/pwh-pwa/pages/products/_category/_subcategory/_slug/_id/index.vue" />
      <jump line="50" column="12" filename="$USER_HOME$/Projects/pwh-pwa/pages/products.vue" />
      <jump line="54" column="26" filename="$USER_HOME$/Projects/pwh-pwa/helpers/products.js" />
      <jump line="42" column="12" filename="$USER_HOME$/Projects/pwh-api/domain/Products/Models/Product.php" />
      <jump line="54" column="28" filename="$USER_HOME$/Projects/pwh-api/domain/Orders/Models/OrderLine.php" />
      <jump line="0" column="0" filename="$USER_HOME$/Projects/pwh-api/domain/Orders/Models/OrderLine.php" />
      <jump line="0" column="0" filename="$USER_HOME$/Projects/pwh-api/.env" />
      <jump line="204" column="6" filename="$USER_HOME$/Projects/pwh-api/database/seeds/MessageTableSeeder.php" />
      <jump line="61" column="0" filename="$USER_HOME$/Projects/pwh-api/database/seeds/MessageTableSeeder.php" />
      <jump line="0" column="0" filename="$USER_HOME$/Projects/pwh-api/database/seeds/MessageTableSeeder.php" />
      <jump line="868" column="74" filename="$USER_HOME$/Projects/pwh-api/storage/logs/laravel-2019-09-10.log" />
      <jump line="11553" column="70" filename="$USER_HOME$/Projects/pwh-api/storage/logs/laravel-2019-09-10.log" />
      <jump line="83" column="0" filename="$USER_HOME$/Projects/pwh-api/domain/Products/Models/Product.php" />
      <jump line="10" column="66" filename="$USER_HOME$/Projects/pwh-api/storage/logs/laravel-2019-09-11.log" />
    </jumps>
    <registers>
      <register name="&quot;" type="2">
        <text encoding="base64">dXNlIERvbWFpblxBdHRyaWJ1dGVzXE1vZGVsc1xBdHRyaWJ1dGU7Cg==</text>
      </register>
      <register name="e" type="4">
        <keys>
          <key char="64" code="0" mods="0" />
          <key char="119" code="0" mods="0" />
          <key char="48" code="0" mods="0" />
          <key char="47" code="0" mods="0" />
          <key char="91" code="0" mods="0" />
          <key char="91" code="0" mods="0" />
          <key char="65535" code="10" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="65535" code="8" mods="0" />
          <key char="45" code="0" mods="0" />
          <key char="62" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="120" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="47" code="0" mods="0" />
          <key char="93" code="0" mods="0" />
          <key char="93" code="0" mods="0" />
          <key char="65535" code="10" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="65535" code="8" mods="0" />
          <key char="65535" code="8" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="106" code="0" mods="0" />
        </keys>
      </register>
      <register name="j" type="4">
        <text />
      </register>
      <register name="-" type="4">
        <text>fid</text>
      </register>
      <register name="/" type="4">
        <text>with</text>
      </register>
      <register name="0" type="2">
        <text encoding="base64">ICAgICAgICAgICAgJGF0dHJpYnV0ZSA9ICRwcm9kdWN0LT5hdHRyaWJ1dGVzLT53aGVyZUZpZCgkcHJpY2VbJ2F0dHJpYnV0ZV9maWQnXSktPmZpcnN0KCk7Cg==</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64">dXNlIERvbWFpblxBdHRyaWJ1dGVzXE1vZGVsc1xBdHRyaWJ1dGU7Cg==</text>
      </register>
      <register name="q" type="4">
        <text />
      </register>
      <register name="2" type="2">
        <text encoding="base64">ICAgICAgICByZXR1cm4gcGFyZW50OjpyZW5kZXIoJHJlcXVlc3QsICRleGNlcHRpb24pOwo=</text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">WzIwMTktMDktMTAgMTE6Mzk6MjBdIGxhcmF2ZWwuRU1FUkdFTkNZOiBVbmFibGUgdG8gY3JlYXRlIGNvbmZpZ3VyZWQgbG9nZ2VyLiBVc2luZyBlbWVyZ2VuY3kgbG9nZ2VyLiB7ImV4Y2VwdGlvbiI6IltvYmplY3RdIChJbnZhbGlkQXJndW1lbnRFeGNlcHRpb24oY29kZTogMCk6IExvZyBbXSBpcyBub3QgZGVmaW5lZC4gYXQgL1VzZXJzL3JvYmJpbi9Qcm9qZWN0cy9wd2gtYXBpL3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Mb2cvTG9nTWFuYWdlci5waHA6MTc1KQpbc3RhY2t0cmFjZV0KIzAgL1VzZXJzL3JvYmJpbi9Qcm9qZWN0cy9wd2gtYXBpL3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Mb2cvTG9nTWFuYWdlci5waHAoMTA5KTogSWxsdW1pbmF0ZVxcTG9nXFxMb2dNYW5hZ2VyLT5yZXNvbHZlKE5VTEwpCiMxIC9Vc2Vycy9yb2JiaW4vUHJvamVjdHMvcHdoLWFwaS92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvTG9nL0xvZ01hbmFnZXIucGhwKDk3KTogSWxsdW1pbmF0ZVxcTG9nXFxMb2dNYW5hZ2VyLT5nZXQoTlVMTCkKIzIgL1VzZXJzL3JvYmJpbi9Qcm9qZWN0cy9wd2gtYXBpL3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Mb2cvTG9nTWFuYWdlci5waHAoNTA3KTogSWxsdW1pbmF0ZVxcTG9nXFxMb2dNYW5hZ2VyLT5kcml2ZXIoKQojMyAvVXNlcnMvcm9iYmluL1Byb2plY3RzL3B3aC1hcGkvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vRXhjZXB0aW9ucy9IYW5kbGVyLnBocCgxMTgpOiBJbGx1bWluYXRlXFxMb2dcXExvZ01hbmFnZXItPmVycm9yKCdzeW50YXggZXJyb3IsIHUuLi4nLCBBcnJheSkKIzQgL1VzZXJzL3JvYmJpbi9Qcm9qZWN0cy9wd2gtYXBpL2FwcC9FeGNlcHRpb25zL0hhbmRsZXIucGhwKDM5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcRXhjZXB0aW9uc1xcSGFuZGxlci0+cmVwb3J0KE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXERlYnVnXFxFeGNlcHRpb25cXEZhdGFsVGhyb3dhYmxlRXJyb3IpKQojNSAvVXNlcnMvcm9iYmluL1Byb2plY3RzL3B3aC1hcGkvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDMxNCk6IEFwcFxcRXhjZXB0aW9uc1xcSGFuZGxlci0+cmVwb3J0KE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXERlYnVnXFxFeGNlcHRpb25cXEZhdGFsVGhyb3dhYmxlRXJyb3IpKQojNiAvVXNlcnMvcm9iYmluL1Byb2plY3RzL3B3aC1hcGkvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDEyMik6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+cmVwb3J0RXhjZXB0aW9uKE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXERlYnVnXFxFeGNlcHRpb25cXEZhdGFsVGhyb3dhYmxlRXJyb3IpKQojNyAvVXNlcnMvcm9iYmluL1Byb2plY3RzL3B3aC1hcGkvcHVibGljL2luZGV4LnBocCg1NSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzggL1VzZXJzL3JvYmJpbi8uY29tcG9zZXIvdmVuZG9yL2xhcmF2ZWwvdmFsZXQvc2VydmVyLnBocCgxNTgpOiByZXF1aXJlKCcvVXNlcnMvcm9iYmluL1AuLi4nKQojOSB7bWFpbn0KIn0gClsyMDE5LTA5LTEwIDExOjM5OjIwXSBsYXJhdmVsLkVSUk9SOiBzeW50YXggZXJyb3IsIHVuZXhwZWN0ZWQgJzw8JyAoVF9TTCksIGV4cGVjdGluZyAnXScgeyJleGNlcHRpb24iOiJbb2JqZWN0XSAoU3ltZm9ueVxcQ29tcG9uZW50XFxEZWJ1Z1xcRXhjZXB0aW9uXFxGYXRhbFRocm93YWJsZUVycm9yKGNvZGU6IDApOiBzeW50YXggZXJyb3IsIHVuZXhwZWN0ZWQgJzw8JyAoVF9TTCksIGV4cGVjdGluZyAnXScgYXQgL1VzZXJzL3JvYmJpbi9Qcm9qZWN0cy9wd2gtYXBpL2NvbmZpZy9nYXRld2F5LnBocDoxMikKW3N0YWNrdHJhY2VdCiMwIC9Vc2Vycy9yb2JiaW4vUHJvamVjdHMvcHdoLWFwaS92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9Cb290c3RyYXAvTG9hZENvbmZpZ3VyYXRpb24ucGhwKDM5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcQm9vdHN0cmFwXFxMb2FkQ29uZmlndXJhdGlvbi0+bG9hZENvbmZpZ3VyYXRpb25GaWxlcyhPYmplY3QoSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcQXBwbGljYXRpb24pLCBPYmplY3QoSWxsdW1pbmF0ZVxcQ29uZmlnXFxSZXBvc2l0b3J5KSkKIzEgL1VzZXJzL3JvYmJpbi9Qcm9qZWN0cy9wd2gtYXBpL3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0FwcGxpY2F0aW9uLnBocCgyMTEpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxCb290c3RyYXBcXExvYWRDb25maWd1cmF0aW9uLT5ib290c3RyYXAoT2JqZWN0KElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEFwcGxpY2F0aW9uKSkKIzIgL1VzZXJzL3JvYmJpbi9Qcm9qZWN0cy9wd2gtYXBpL3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxNjIpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxBcHBsaWNhdGlvbi0+Ym9vdHN0cmFwV2l0aChBcnJheSkKIzMgL1VzZXJzL3JvYmJpbi9Qcm9qZWN0cy9wd2gtYXBpL3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxNDYpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxLZXJuZWwtPmJvb3RzdHJhcCgpCiM0IC9Vc2Vycy9yb2JiaW4vUHJvamVjdHMvcHdoLWFwaS92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL0tlcm5lbC5waHAoMTE2KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcS2VybmVsLT5zZW5kUmVxdWVzdFRocm91Z2hSb3V0ZXIoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNSAvVXNlcnMvcm9iYmluL1Byb2plY3RzL3B3aC1hcGkvcHVibGljL2luZGV4LnBocCg1NSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzYgL1VzZXJzL3JvYmJpbi8uY29tcG9zZXIvdmVuZG9yL2xhcmF2ZWwvdmFsZXQvc2VydmVyLnBocCgxNTgpOiByZXF1aXJlKCcvVXNlcnMvcm9iYmluL1AuLi4nKQojNyB7bWFpbn0KIn0gCg==</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">ICAgICAgICAgICAgLy8gZGVjaWRlIHdoaWNoIHByb2R1Y3QK</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">ICAgICAgICAgICAgJGF0dHJpYnV0ZSA9ICRwcm9kdWN0LT5hdHRyaWJ1dGVzLT53aGVyZUZpZCgkcHJpY2VbJ2F0dHJpYnV0ZV9maWQnXSktPmZpcnN0KCk7Cg==</text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">ICAgICAgICAgICAgcmV0dXJuOwo=</text>
      </register>
      <register name="w" type="4">
        <keys>
          <key char="48" code="0" mods="0" />
          <key char="47" code="0" mods="0" />
          <key char="91" code="0" mods="0" />
          <key char="39" code="0" mods="0" />
          <key char="65535" code="10" mods="0" />
          <key char="115" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="115" code="0" mods="0" />
          <key char="45" code="0" mods="0" />
          <key char="62" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="47" code="0" mods="0" />
          <key char="39" code="0" mods="0" />
          <key char="93" code="0" mods="0" />
          <key char="65535" code="10" mods="0" />
          <key char="50" code="0" mods="0" />
          <key char="120" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="106" code="0" mods="0" />
        </keys>
      </register>
      <register name="8" type="2">
        <text encoding="base64">ICAgICAgICAkcHJpY2UgPSBQcmljZTo6dXBkYXRlT3JDcmVhdGUoWwogICAgICAgICAgICAnZmlkJyA9PiAkcHJpY2VbJ2ZpZCddLAogICAgICAgICAgICAncHJpY2VhYmxlX2lkJyA9PiAkcHJvZHVjdC0+aWQsCiAgICAgICAgICAgICdwcmljZWFibGVfdHlwZScgPT4gZ2V0X2NsYXNzKCRwcm9kdWN0KSwKICAgICAgICBdLCBbCiAgICAgICAgICAgICdwdXJjaGFzZScgPT4gKGZsb2F0KSAkcHJpY2VbJ3B1cmNoYXNlJ10sCiAgICAgICAgICAgICdhcHBsZV9saXN0JyA9PiAoZmxvYXQpICRwcmljZVsnYXBwbGVfbGlzdCddLAogICAgICAgICAgICAnZGFjJyA9PiAoZmxvYXQpICRwcmljZVsnZGFjJ10sCiAgICAgICAgICAgICd3ZWInID0+IChmbG9hdCkgJHByaWNlWyd3ZWInXSwKICAgICAgICAgICAgJ2FjdGlvbicgPT4gKGZsb2F0KSAkcHJpY2VbJ2FjdGlvbiddLAogICAgICAgICAgICAnYWN0aW9uX2F0JyA9PiAkcHJpY2VbJ2FjdGlvbl9hdCddLAogICAgICAgICAgICAnYWN0aW9uX3RocnUnID0+ICRwcmljZVsnYWN0aW9uX3RocnUnXSwKICAgICAgICBdKTsK</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">Pj4+Pj4+PiBkZXZlbG9wCg==</text>
      </register>
      <register name=":" type="4">
        <text encoding="base64">JzwsJz5zL2NsZWFyL2VtcHR5L2c=</text>
      </register>
    </registers>
    <search>
      <last-search>with</last-search>
      <last-offset />
      <last-pattern>with</last-pattern>
      <last-replace>empty</last-replace>
      <last-substitute>clear</last-substitute>
      <last-dir>-1</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search>
        <entry>map</entry>
        <entry>sup</entry>
        <entry>Field</entry>
        <entry>field</entry>
        <entry>imp</entry>
        <entry>F</entry>
        <entry>form.</entry>
        <entry>set</entry>
        <entry>ar</entry>
        <entry>form</entry>
        <entry>data</entry>
        <entry>order</entry>
        <entry>comp</entry>
        <entry>cool</entry>
        <entry>checkout.shipping</entry>
        <entry>A</entry>
        <entry>line</entry>
        <entry>store</entry>
        <entry>clear</entry>
        <entry>with</entry>
      </history-search>
      <history-cmd>
        <entry encoding="base64">JzwsJz5zL2FjY2Vzc29yeS9hdHRyaWJ1dGUvZw==</entry>
        <entry>s/name/fid/g</entry>
        <entry>s/references/results/g</entry>
        <entry encoding="base64">JzwsJz5zL2NvbC0xL2NvbHVtbnM=</entry>
        <entry>s/&quot;/'</entry>
        <entry>s/attributes/accessories/g</entry>
        <entry encoding="base64">JzwsJz5zL2FkZHJlc3Mvc2VsZWN0ZWRBZGRyZXNzL2c=</entry>
        <entry encoding="base64">JzwsJz5zLyx9LC99LA==</entry>
        <entry>s/'/&quot;/g</entry>
        <entry>response</entry>
        <entry encoding="base64">JzwsJz5zL3Jlc3BvbnNlL3Jlcy9n</entry>
        <entry>s/en/nl/g</entry>
        <entry>s/checkout.shipping/addresspicker.form/g</entry>
        <entry encoding="base64">JzwsJz5zL2NoZWNrb3V0Ly9n</entry>
        <entry>s/checkout.shipping/address.form/g</entry>
        <entry encoding="base64">JzwsJz5zL19wYXJjZWwvZw==</entry>
        <entry encoding="base64">JzwsJz5zL19wYXJjZWwvL2c=</entry>
        <entry>s/user/cart/g</entry>
        <entry encoding="base64">JzwsJz5zL2NoZWNrb3V0LnNoaXBwaW5nL2FkZHJlc3MuZm9ybQ==</entry>
        <entry encoding="base64">JzwsJz5zL2NsZWFyL2VtcHR5L2c=</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed I</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed N</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed E</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed G</text>
      </shortcut-conflict>
    </shortcut-conflicts>
    <editor>
      <key-repeat enabled="false" />
    </editor>
  </component>
</application>