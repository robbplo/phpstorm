<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="$USER_HOME$/Projects/auth.smit/api/v1/Account/Controllers/UserController.php" timestamp="1555654571141">
        <mark key="[" line="12" column="50" />
      </file>
      <file name="$USER_HOME$/Projects/finish-building/domain/Offers/SalesforceMapper.php" timestamp="1556616515442">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="62" column="0" />
        <mark key="]" line="62" column="0" />
        <mark key="." line="62" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/finish-building/app/Observers/OfferObserver.php" timestamp="1556616267605">
        <mark key="[" line="16" column="17" />
        <mark key="]" line="16" column="17" />
        <mark key="^" line="16" column="17" />
        <mark key="." line="16" column="17" />
      </file>
      <file name="$USER_HOME$/Projects/finish-building/infrastructure/Pdfs/Generator.php" timestamp="1556617989345">
        <mark key="'" line="59" column="0" />
        <mark key="[" line="13" column="0" />
        <mark key="]" line="13" column="0" />
        <mark key="." line="13" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/finish-building/nova-components/OfferManager/resources/js/components/OfferForm.vue" timestamp="1556617192388">
        <mark key="[" line="768" column="0" />
        <mark key="]" line="768" column="0" />
        <mark key="." line="768" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/apotheker/nova-components/DocumentViewer/resources/js/components/Tool.vue" timestamp="1556625386468">
        <mark key="[" line="40" column="0" />
        <mark key="]" line="40" column="0" />
        <mark key="^" line="54" column="42" />
        <mark key="." line="40" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/finish-building/app/Enums/BuildingOverheadDoorColors.php" timestamp="1556542371278">
        <mark key="'" line="9" column="26" />
      </file>
      <file name="$USER_HOME$/Projects/apotheker/app/Jobs/GenerateContract.php" timestamp="1556624165240">
        <mark key="'" line="1" column="0" />
      </file>
      <file name="/PHP Console" timestamp="1556616510207">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/finish-building/resources/views/partslist/index.blade.php" timestamp="1556617344014">
        <mark key="'" line="176" column="13" />
        <mark key="[" line="16" column="9" />
      </file>
      <file name="$USER_HOME$/Projects/finish-building/app/Enums/BuildingWallPlating.php" timestamp="1556613252919" />
      <file name="/Dummy.txt" timestamp="1556624068340">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/finish-building/app/Enums/BuildingWindowFrameColors.php" timestamp="1556622920571">
        <mark key="[" line="12" column="18" />
        <mark key="]" line="13" column="37" />
        <mark key="." line="13" column="37" />
        <mark key="^" line="13" column="37" />
      </file>
      <file name="$USER_HOME$/Projects/finish-building/resources/views/quotation/header.blade.php" timestamp="1556540998497">
        <mark key="'" line="23" column="29" />
        <mark key="[" line="7" column="0" />
        <mark key="]" line="7" column="0" />
        <mark key="." line="7" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/finish-building/resources/views/quotation/pages/page2.blade.php" timestamp="1556530366778">
        <mark key="'" line="22" column="13" />
        <mark key="[" line="8" column="0" />
        <mark key="]" line="8" column="0" />
        <mark key="." line="8" column="0" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" timestamp="1556614589235">
        <mark key="[" line="11" column="12" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/apotheker/storage/logs/laravel-2019-04-30.log" timestamp="1556623687349">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/apotheker/resources/js/app.js" timestamp="1556026465197">
        <mark key="[" line="17" column="81" />
      </file>
      <file name="$USER_HOME$/Projects/apotheker/nova-components/DocumentViewer/routes/api.php" timestamp="1556624428976" />
      <file name="$USER_HOME$/Projects/finish-building/storage/logs/laravel-2019-04-29.log" timestamp="1556616823463">
        <mark key="'" line="17" column="156" />
      </file>
      <file name="$USER_HOME$/Projects/finish-building/resources/views/quotation/footer.blade.php" timestamp="1556617685414">
        <mark key="'" line="81" column="12" />
        <mark key="[" line="18" column="0" />
        <mark key="]" line="18" column="0" />
        <mark key="." line="18" column="0" />
        <mark key="^" line="56" column="41" />
      </file>
      <file name="$USER_HOME$/Projects/finish-building/resources/views/quotation/index.blade.php" timestamp="1556617956895">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="159" column="0" />
        <mark key="]" line="159" column="0" />
        <mark key="." line="159" column="0" />
        <mark key="^" line="165" column="22" />
      </file>
    </filemarks>
    <jumps>
      <jump line="0" column="0" filename="$USER_HOME$/Projects/finish-building/app/Http/Controllers/OfferController.php" />
      <jump line="40" column="29" filename="$USER_HOME$/Projects/finish-building/domain/Offers/SalesforceMapper.php" />
      <jump line="782" column="13" filename="$USER_HOME$/Projects/finish-building/nova-components/OfferManager/resources/js/components/OfferForm.vue" />
      <jump line="858" column="20" filename="$USER_HOME$/Projects/finish-building/nova-components/OfferManager/resources/js/components/OfferForm.vue" />
      <jump line="395" column="43" filename="$USER_HOME$/Projects/finish-building/nova-components/OfferManager/resources/js/components/OfferForm.vue" />
      <jump line="347" column="18" filename="$USER_HOME$/Projects/finish-building/nova-components/OfferManager/resources/js/components/OfferForm.vue" />
      <jump line="14" column="0" filename="$USER_HOME$/Projects/finish-building/nova-components/OfferManager/resources/js/Offer.js" />
      <jump line="18" column="15" filename="$USER_HOME$/Projects/finish-building/resources/views/partslist/index.blade.php" />
      <jump line="48" column="49" filename="$USER_HOME$/Projects/finish-building/resources/views/partslist/index.blade.php" />
      <jump line="49" column="49" filename="$USER_HOME$/Projects/finish-building/resources/views/partslist/index.blade.php" />
      <jump line="50" column="49" filename="$USER_HOME$/Projects/finish-building/resources/views/partslist/index.blade.php" />
      <jump line="5" column="111" filename="$USER_HOME$/Projects/finish-building/resources/views/partslist/index.blade.php" />
      <jump line="14" column="27" filename="$USER_HOME$/Projects/finish-building/resources/views/partslist/index.blade.php" />
      <jump line="22" column="26" filename="$USER_HOME$/Projects/finish-building/resources/views/partslist/index.blade.php" />
      <jump line="31" column="36" filename="$USER_HOME$/Projects/finish-building/resources/views/partslist/index.blade.php" />
      <jump line="32" column="36" filename="$USER_HOME$/Projects/finish-building/resources/views/partslist/index.blade.php" />
      <jump line="92" column="8" filename="$USER_HOME$/Projects/finish-building/resources/views/partslist/index.blade.php" />
      <jump line="79" column="0" filename="$USER_HOME$/Projects/finish-building/resources/views/partslist/index.blade.php" />
      <jump line="84" column="32" filename="$USER_HOME$/Projects/finish-building/resources/views/partslist/index.blade.php" />
      <jump line="136" column="24" filename="$USER_HOME$/Projects/finish-building/resources/views/partslist/index.blade.php" />
      <jump line="168" column="0" filename="$USER_HOME$/Projects/finish-building/resources/views/partslist/index.blade.php" />
      <jump line="14" column="7" filename="$USER_HOME$/Projects/finish-building/infrastructure/Pdfs/Generator.php" />
      <jump line="33" column="12" filename="$USER_HOME$/Projects/finish-building/resources/views/partslist/index.blade.php" />
      <jump line="171" column="20" filename="$USER_HOME$/Projects/finish-building/resources/views/partslist/index.blade.php" />
      <jump line="8" column="24" filename="$USER_HOME$/Projects/finish-building/resources/views/quotation/pages/page2.blade.php" />
      <jump line="64" column="40" filename="$USER_HOME$/Projects/finish-building/domain/Offers/SalesforceMapper.php" />
      <jump line="38" column="4" filename="$USER_HOME$/Projects/finish-building/app/Http/Controllers/OfferController.php" />
      <jump line="23" column="24" filename="$USER_HOME$/Projects/finish-building/domain/Offers/SalesforceMapper.php" />
      <jump line="0" column="0" filename="$USER_HOME$/Projects/finish-building/domain/Offers/SalesforceMapper.php" />
      <jump line="28" column="53" filename="$USER_HOME$/Projects/finish-building/resources/views/quotation/pages/page2.blade.php" />
      <jump line="23" column="24" filename="$USER_HOME$/Projects/finish-building/resources/views/quotation/pages/page2.blade.php" />
      <jump line="22" column="13" filename="$USER_HOME$/Projects/finish-building/resources/views/quotation/pages/page2.blade.php" />
      <jump line="24" column="40" filename="$USER_HOME$/Projects/finish-building/resources/views/quotation/pages/page1.blade.php" />
      <jump line="0" column="0" filename="$USER_HOME$/Projects/finish-building/resources/views/quotation/footer.blade.php" />
      <jump line="10" column="8" filename="$USER_HOME$/Projects/finish-building/resources/views/quotation/footer.blade.php" />
      <jump line="34" column="7" filename="$USER_HOME$/Projects/finish-building/resources/views/quotation/footer.blade.php" />
      <jump line="44" column="13" filename="$USER_HOME$/Projects/finish-building/resources/views/quotation/footer.blade.php" />
      <jump line="22" column="29" filename="$USER_HOME$/Projects/finish-building/resources/views/quotation/header.blade.php" />
      <jump line="184" column="0" filename="$USER_HOME$/Projects/finish-building/resources/views/quotation/index.blade.php" />
      <jump line="36" column="28" filename="$USER_HOME$/Projects/finish-building/infrastructure/Pdfs/Generator.php" />
      <jump line="149" column="14" filename="$USER_HOME$/Projects/finish-building/resources/views/quotation/index.blade.php" />
      <jump line="35" column="12" filename="$USER_HOME$/Projects/finish-building/resources/views/quotation/index.blade.php" />
      <jump line="29" column="9" filename="$USER_HOME$/Projects/finish-building/resources/views/quotation/index.blade.php" />
      <jump line="19" column="9" filename="$USER_HOME$/Projects/finish-building/resources/views/quotation/index.blade.php" />
      <jump line="189" column="38" filename="$USER_HOME$/Projects/finish-building/resources/views/quotation/index.blade.php" />
      <jump line="152" column="21" filename="$USER_HOME$/Projects/finish-building/resources/views/quotation/index.blade.php" />
      <jump line="21" column="28" filename="$USER_HOME$/Projects/finish-building/resources/views/quotation/index.blade.php" />
      <jump line="60" column="0" filename="$USER_HOME$/Projects/finish-building/infrastructure/Pdfs/Generator.php" />
      <jump line="85" column="12" filename="$USER_HOME$/Projects/finish-building/resources/views/quotation/footer.blade.php" />
      <jump line="14" column="9" filename="$USER_HOME$/Projects/finish-building/app/Enums/BuildingOverheadDoorColors.php" />
      <jump line="23" column="8" filename="$USER_HOME$/Projects/finish-building/app/Enums/BuildingOverheadDoorColors.php" />
      <jump line="9" column="13" filename="$USER_HOME$/Projects/finish-building/app/Enums/BuildingOverheadDoorColors.php" />
      <jump line="13" column="0" filename="$USER_HOME$/Projects/finish-building/app/Enums/BuildingOverheadDoorColors.php" />
      <jump line="20" column="38" filename="$USER_HOME$/Projects/finish-building/app/Enums/BuildingOverheadDoorColors.php" />
      <jump line="21" column="43" filename="$USER_HOME$/Projects/finish-building/app/Enums/BuildingOverheadDoorColors.php" />
      <jump line="22" column="26" filename="$USER_HOME$/Projects/finish-building/app/Enums/BuildingOverheadDoorColors.php" />
      <jump line="12" column="0" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="0" column="18" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="22" column="6" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="1" column="18" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="3" column="8" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="5" column="9" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="7" column="8" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="9" column="6" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="11" column="12" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="13" column="12" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="15" column="9" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="17" column="6" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="19" column="6" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="21" column="11" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="43" column="11" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="23" column="8" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="45" column="8" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="25" column="6" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="47" column="6" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="27" column="14" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="49" column="14" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="29" column="13" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="51" column="13" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="31" column="14" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="53" column="14" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="33" column="9" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="55" column="9" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="35" column="3" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="57" column="3" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="37" column="8" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="59" column="8" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="39" column="4" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="61" column="4" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="41" column="12" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="63" column="12" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="79" column="0" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_1.tpl" />
      <jump line="17" column="156" filename="$USER_HOME$/Projects/finish-building/storage/logs/laravel-2019-04-29.log" />
      <jump line="172" column="13" filename="$USER_HOME$/Projects/finish-building/resources/views/partslist/index.blade.php" />
      <jump line="156" column="0" filename="$USER_HOME$/Projects/finish-building/resources/views/quotation/index.blade.php" />
      <jump line="160" column="12" filename="$USER_HOME$/Projects/finish-building/resources/views/quotation/index.blade.php" />
      <jump line="0" column="0" filename="$USER_HOME$/Projects/finish-building/resources/views/quotation/index.blade.php" />
      <jump line="1" column="0" filename="$USER_HOME$/Projects/apotheker/app/Jobs/GenerateContract.php" />
      <jump line="21" column="0" filename="$USER_HOME$/Projects/apotheker/storage/logs/laravel-2019-04-30.log" />
      <jump line="808" column="27" filename="$USER_HOME$/Projects/apotheker/storage/logs/laravel-2019-04-30.log" />
    </jumps>
    <registers>
      <register name="&quot;" type="2">
        <text encoding="base64">ICAgICAgICAgIHJldHVybiBmYWxzZTsK</text>
      </register>
      <register name="e" type="4">
        <text>warnings.email</text>
      </register>
      <register name="-" type="4">
        <text>field</text>
      </register>
      <register name="/" type="4">
        <text>F</text>
      </register>
      <register name="0" type="2">
        <text encoding="base64">ICAgICAgICAgICAgY29sb3I6ICNGRkYgIWltcG9ydGFudDsKICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiAjRkZGICFpbXBvcnRhbnQ7Cg==</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64">ICAgICAgICAgIHJldHVybiBmYWxzZTsK</text>
      </register>
      <register name="q" type="4">
        <text />
      </register>
      <register name="2" type="2">
        <text encoding="base64">ICAgICAgICBpZiAoIXRoaXMuZmllbGQpIHsK</text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">ICAgICAgICB9Cg==</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">ICAgICAgICBpZiAoIXRoaXMuZmllbGQpIHsKICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9Cg==</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">ICAgICAgICBkZWJ1Z2dlcgo=</text>
      </register>
      <register name="6" type="4">
        <text encoding="base64"></text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">ICAgICAgICAvLyByZXR1cm4gJHRoaXMtPmdldFZpZXcoKS0+cmVuZGVyKCk7Cg==</text>
      </register>
      <register name="w" type="4">
        <keys>
          <key char="102" code="0" mods="0" />
          <key char="62" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="100" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="111" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="112" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="100" code="0" mods="0" />
          <key char="100" code="0" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="48" code="0" mods="0" />
        </keys>
      </register>
      <register name="8" type="2">
        <text encoding="base64">ICAgICAgICAgICAgY29sb3I6ICNDQ0MgIWltcG9ydGFudDsKICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiAjQ0NDICFpbXBvcnRhbnQ7Cg==</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">e3stLSAgICAgICAgICAgIDxkaXYgY2xhc3M9ImluaXRpYWxzIGluaXRpYWxzMiI+UGFyYWFmIHZvb3IgYWtrb29yZCA6PC9kaXY+LS19fQo=</text>
      </register>
      <register name=":" type="4">
        <text encoding="base64">JzwsJz5zL0YvQy9n</text>
      </register>
    </registers>
    <search>
      <last-search>F</last-search>
      <last-offset />
      <last-pattern>F</last-pattern>
      <last-replace>C</last-replace>
      <last-substitute>F</last-substitute>
      <last-dir>1</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search>
        <entry>10</entry>
        <entry>pr</entry>
        <entry>wall</entry>
        <entry>Wall</entry>
        <entry>'</entry>
        <entry>line</entry>
        <entry>size</entry>
        <entry>bakc</entry>
        <entry>back</entry>
        <entry>page</entry>
        <entry>running</entry>
        <entry>scr</entry>
        <entry>16</entry>
        <entry>00</entry>
        <entry>kle</entry>
        <entry>9000</entry>
        <entry>kleir</entry>
        <entry>kleur</entry>
        <entry>ret</entry>
        <entry>F</entry>
      </history-search>
      <history-cmd>
        <entry encoding="base64">JzwsJz5zL2JjL2VuYy9n</entry>
        <entry>S/'/&quot;/g</entry>
        <entry>s/'/&quot;/g</entry>
        <entry>s/typ/sp/g</entry>
        <entry encoding="base64">JzwsJz5zL2xldC9jb25zdC9n</entry>
        <entry>s/offer/data/g</entry>
        <entry encoding="base64">JzwsJz5zL2ZpZWxkL2tleS9n</entry>
        <entry encoding="base64">JzwsJz5zL2Zsb2F0LWxlZnQvZmxleC0xL2c=</entry>
        <entry encoding="base64">JzwsJz5zLzEwLzEyL2c=</entry>
        <entry encoding="base64">JzwsJz5zL3dhbGwvcm9vZi9n</entry>
        <entry encoding="base64">JzwsJz5zL3dhbGwvcm9vZi9naQ==</entry>
        <entry encoding="base64">JzwsJz5zL3dhbGwvcm9vZg==</entry>
        <entry encoding="base64">JzwsJz5zL1dhbGwvUm9vZg==</entry>
        <entry>s/16/00/g</entry>
        <entry>s/00/16/g</entry>
        <entry>s/9000/7016/g</entry>
        <entry>s/9000/6005/g</entry>
        <entry>s/9000/5010/g</entry>
        <entry>s/9000/3000/g</entry>
        <entry encoding="base64">JzwsJz5zL0YvQy9n</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed I</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed N</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed E</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed G</text>
      </shortcut-conflict>
    </shortcut-conflicts>
    <editor>
      <key-repeat enabled="false" />
    </editor>
  </component>
</application>